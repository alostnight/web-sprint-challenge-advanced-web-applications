{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alost\\\\desktop\\\\lambda\\\\web-sprint-challenge-advanced-web-applications\\\\client\\\\src\\\\components\\\\ColorList.js\";\nimport React, { useState } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  const [editing, setEditing] = useState(false);\n  const [color, setColor] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColor(color);\n  };\n\n  const reset = () => {\n    setColor(initialColor);\n    setEditing(false);\n  };\n\n  const updateColor = e => {\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n    axiosWithAuth().put(`http://localhost:5000/api/colors/${colors.id}`, color).then(res => {\n      const updatedColors = colors.map(color => color.id === res.data.id ? res.data : colors);\n      updateColors(updatedColors);\n      reset();\n    }).catch(err => {\n      console.log(\"Error: \", err);\n    });\n  };\n\n  const saveColor = () => {\n    axiosWithAuth().post(\"/api/colors\", color).then(res => {\n      const colors = res.data;\n      updateColors(colors);\n      reset();\n    });\n  };\n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n    axiosWithAuth().delete(`http://localhost:5000/api/colors/${colors.id}`).then(res => {\n      const updatedColors = colors.filter(color => color.id !== res.data);\n      updateColors(updatedColors);\n      setColor(initialColor);\n    }).catch(err => {\n      console.log(\"Error: \", err);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!(color.color && color.code.hex)) {\n      return;\n    }\n\n    if (color.id) {\n      updateColor();\n    } else {\n      saveColor();\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })))), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, `${editing ? \"edit\" : \"add\"} color`), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColor({ ...color,\n      color: e.target.value\n    }),\n    value: color.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColor({ ...color,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: color.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, editing ? \"update\" : \"save\"), React.createElement(\"button\", {\n    onClick: reset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["C:/Users/alost/desktop/lambda/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","editing","setEditing","setColor","editColor","reset","updateColor","e","put","id","then","res","updatedColors","map","data","catch","err","console","log","saveColor","post","deleteColor","delete","filter","handleSubmit","preventDefault","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\n\nconst initialColor = {\n  color: \"\",\n  code: { hex: \"\" },\n};\n\nconst ColorList = ({ colors, updateColors }) => {\n  const [editing, setEditing] = useState(false);\n  const [color, setColor] = useState(initialColor);\n\n  const editColor = (color) => {\n    setEditing(true);\n    setColor(color);\n  };\n\n  const reset = () => {\n    setColor(initialColor);\n    setEditing(false);\n  };\n\n  const updateColor = (e) => {\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n    axiosWithAuth()\n      .put(`http://localhost:5000/api/colors/${colors.id}`, color)\n      .then((res) => {\n        const updatedColors = colors.map((color) =>\n          color.id === res.data.id ? res.data : colors\n        );\n        updateColors(updatedColors);\n        reset();\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  const saveColor = () => {\n    axiosWithAuth()\n      .post(\"/api/colors\", color)\n      .then((res) => {\n        const colors = res.data;\n        updateColors(colors);\n        reset();\n      });\n  };\n\n  const deleteColor = (color) => {\n    // make a delete request to delete this color\n    axiosWithAuth()\n      .delete(`http://localhost:5000/api/colors/${colors.id}`)\n      .then((res) => {\n        const updatedColors = colors.filter((color) => color.id !== res.data);\n        updateColors(updatedColors);\n        setColor(initialColor);\n      })\n      .catch((err) => {\n        console.log(\"Error: \", err);\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!(color.color && color.code.hex)) {\n      return;\n    }\n    if (color.id) {\n      updateColor();\n    } else {\n      saveColor();\n    }\n  };\n\n  return (\n    <div className=\"colors-wrap\">\n      <p>colors</p>\n      <ul>\n        {colors.map((color) => (\n          <li key={color.color} onClick={() => editColor(color)}>\n            <span>\n              <span\n                className=\"delete\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  deleteColor(color);\n                }}\n              >\n                x\n              </span>{\" \"}\n              {color.color}\n            </span>\n            <div\n              className=\"color-box\"\n              style={{ backgroundColor: color.code.hex }}\n            />\n          </li>\n        ))}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <legend>{`${editing ? \"edit\" : \"add\"} color`}</legend>\n        <label>\n          color name:\n          <input\n            onChange={(e) => setColor({ ...color, color: e.target.value })}\n            value={color.color}\n          />\n        </label>\n        <label>\n          hex code:\n          <input\n            onChange={(e) =>\n              setColor({\n                ...color,\n                code: { hex: e.target.value },\n              })\n            }\n            value={color.code.hex}\n          />\n        </label>\n        <div className=\"button-row\">\n          <button type=\"submit\">{editing ? \"update\" : \"save\"}</button>\n          <button onClick={reset}>cancel</button>\n        </div>\n      </form>\n      <div className=\"spacer\" />\n      {/* stretch - build another form here to add a color */}\n    </div>\n  );\n};\n\nexport default ColorList;\n"]},"metadata":{},"sourceType":"module"}